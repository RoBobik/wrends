<?xml version="1.0" encoding="UTF-8"?>
<!--
  The contents of this file are subject to the terms of the Common Development and
  Distribution License (the License). You may not use this file except in compliance with the
  License.

  You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the
  specific language governing permission and limitations under the License.

  When distributing Covered Software, include this CDDL Header Notice in each file and include
  the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL
  Header, with the fields enclosed by brackets [] replaced by your own identifying
  information: "Portions Copyright [year] [name of copyright owner]".

  Copyright 2015-2016 ForgeRock AS.
  Portions Copyright 2018-2021 Wren Security.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.forgerock.opendj</groupId>
        <artifactId>opendj-zip</artifactId>
        <version>4.0.0-M4-SNAPSHOT</version>
    </parent>

    <artifactId>opendj-zip-oem</artifactId>
    <name>Wren:DS ZIP OEM Pacakge</name>

    <packaging>pom</packaging>

    <description>
        This module generates an OEM Wren:DS version.
    </description>

    <properties>
        <!-- Comma separated list of file patterns to remove from standard archive -->
        <oem.file.exclusion.list>
            ${product.name.lowercase}/lib/bootstrap.jar,
            ${product.name.lowercase}/lib/bootstrap-client.jar,
            ${product.name.lowercase}/lib/je.jar,
            ${product.name.lowercase}/lib/${product.name.lowercase}-je-backend.jar,
            ${product.name.lowercase}/legal-notices/THIRDPARTYREADME.txt
        </oem.file.exclusion.list>
        <product.archive.name>${product.name.lowercase}-oem-${project.version}</product.archive.name>
    </properties>

    <dependencies>
        <!--
          ! Add this dependency to have opendj-server-legacy dependencies in
          ! our classpath to build boostrap.jar and boostrap-client.jar
        -->
        <dependency>
            <groupId>org.forgerock.opendj</groupId>
            <artifactId>opendj-server-legacy</artifactId>
            <version>${project.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.sleepycat</groupId>
                    <artifactId>je</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Override scope for org.slf4j:slf4j-jdk14 to have it in the bootstrap-client.jar -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
        </dependency>
    </dependencies>

    <build>
        <finalName>${product.name.lowercase}</finalName>
        <plugins>
            <!-- Generates bootstrap.jar and bootstrap-client.jar for OEM archive edition --> 
            <plugin>
                <groupId>org.forgerock.opendj</groupId>
                <artifactId>opendj-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <addMavenDescriptor>false</addMavenDescriptor>
                        <index>false</index>
                    </archive>
                    <includes>
                        <include>nothing</include>
                    </includes>
                </configuration>

                <executions>
                    <!-- Package bootstrap jar - contains only a manifest with classpath for the server -->
                    <execution>
                        <id>build-bootstrap-jar</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <classifier>bootstrap</classifier>
                            <archive>
                                <index>false</index>
                                <manifestFile>
                                    ${project.build.outputDirectory}/bootstrap/manifest-bootstrap
                                </manifestFile>
                            </archive>
                        </configuration>
                    </execution>

                    <!-- Package bootstrap-client jar - contains only a manifest with classpath for clients -->
                    <execution>
                        <id>build-bootstrap-client-jar</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <classifier>bootstrap-client</classifier>
                            <archive>
                                <index>false</index>
                                <manifestFile>
                                    ${project.build.outputDirectory}/bootstrap/manifest-bootstrap-client
                                </manifestFile>
                            </archive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <!-- Unpack files from Wren:DS standard archive -->
                    <execution>
                        <id>unpack-archive</id>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <excludes>${oem.file.exclusion.list}</excludes>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Creates Wren:DS OEM version archive -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>build-opendj-archive</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <finalName>${product.archive.name}</finalName>
                            <descriptors>
                                <descriptor>src/main/assembly/opendj-zip-oem-archive-assembly.xml</descriptor>
                            </descriptors>
                            <appendAssemblyId>false</appendAssemblyId>
                            <formats>
                                <format>zip</format>
                            </formats>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
